steps:
  # Create a minimal build context directory with only necessary files
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "Creating minimal build context..."
        
        # Create minimal build directory
        mkdir -p /workspace/minimal-context
        
        # Copy only essential files for build
        cp package.json package-lock.json /workspace/minimal-context/
        cp Dockerfile /workspace/minimal-context/
        cp next.config.js postcss.config.js tailwind.config.js /workspace/minimal-context/
        cp -r src /workspace/minimal-context/
        cp -r public /workspace/minimal-context/
        
        # Copy specific config files that might be needed
        [ -f .env.production ] && cp .env.production /workspace/minimal-context/ || echo "No .env.production found"
        [ -f jest.config.js ] && cp jest.config.js /workspace/minimal-context/ || echo "No jest.config.js found"
        [ -f jest.setup.js ] && cp jest.setup.js /workspace/minimal-context/ || echo "No jest.setup.js found"
        
        # Verify the minimal context size
        echo "Minimal context contents:"
        ls -la /workspace/minimal-context/
        echo "Minimal context size:"
        du -sh /workspace/minimal-context/
        echo "File count:"
        find /workspace/minimal-context -type f | wc -l
        
        # Ensure we have a .dockerignore in minimal context for extra safety
        cat > /workspace/minimal-context/.dockerignore << 'EOF'
        node_modules
        .next
        .git
        *.log
        .DS_Store
        EOF

  # Build the container image from minimal context
  - name: 'gcr.io/cloud-builders/docker'
    dir: '/workspace/minimal-context'
    args: 
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:$BUILD_ID'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:latest'
      - '--cache-from'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:latest'
      - '--build-arg'
      - 'BUILDKIT_INLINE_CACHE=1'
      - '.'
  
  # Push both tagged images to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app']
  
  # Create Cloud Run service configuration from YAML
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'replace'
      - 'cloud-run-service.yaml'
      - '--region=us-central1'
  
  # Deploy container image to Cloud Run with comprehensive settings
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'cbl-maikosh-app'
      - '--image'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '900'
      - '--concurrency'
      - '1000'
      - '--max-instances'
      - '100'
      - '--min-instances'
      - '1'
      - '--port'
      - '8080'
      - '--service-account'
      - 'cbl-maikosh-service@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars'
      - '^#^NODE_ENV=production#NEXT_PUBLIC_API_URL=https://cbl-maikosh-app-$_ENVIRONMENT-$PROJECT_ID.a.run.app/api#AUTH0_BASE_URL=https://cbl-maikosh-app-$_ENVIRONMENT-$PROJECT_ID.a.run.app#GCP_PROJECT_ID=$PROJECT_ID#GCP_STORAGE_BUCKET=cbl-maikosh-$_ENVIRONMENT-storage-$PROJECT_ID#NEXT_TELEMETRY_DISABLED=1'
      - '--set-secrets'
      - '^#^AUTH0_SECRET=auth0-secret:latest#AUTH0_CLIENT_ID=auth0-client-id:latest#AUTH0_CLIENT_SECRET=auth0-client-secret:latest#AUTH0_ISSUER_BASE_URL=auth0-issuer-url:latest#FIREBASE_API_KEY=firebase-api-key:latest#FIREBASE_AUTH_DOMAIN=firebase-auth-domain:latest#FIREBASE_PROJECT_ID=firebase-project-id:latest#FIREBASE_STORAGE_BUCKET=firebase-storage-bucket:latest#FIREBASE_MESSAGING_SENDER_ID=firebase-messaging-sender-id:latest#FIREBASE_APP_ID=firebase-app-id:latest#GA_MEASUREMENT_ID=ga-measurement-id:latest'
      - '--labels'
      - 'environment=$_ENVIRONMENT,application=cbl-maikosh,tier=web'
      - '--tag'
      - '$_ENVIRONMENT'
  
  # Configure traffic allocation (100% to latest revision)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'cbl-maikosh-app'
      - '--to-latest'
      - '--region'
      - 'us-central1'

# Substitutions for environment-specific deployments
substitutions:
  _ENVIRONMENT: 'prod'

# Images to be pushed to registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:$BUILD_ID'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cbl-maikosh-repo/cbl-maikosh-app:latest'

# Build configuration
timeout: '2400s'  # 40 minutes
options:
  machineType: 'E2_HIGHCPU_8'  # High CPU for faster builds
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY